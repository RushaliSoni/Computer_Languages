Object-oriented programming (OOP) is a programming paradigm based on the concept of “objects”, which may contain data,
in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods. In OOP,
computer programs are designed by making them out of objects that interact with one another.<br/>

<b>Agora</b><br/>
It is a prototype-based object-oriented programming language that features message passing mechanisms.<br/>

<b>BETA</b><br/>
It is an object-oriented programming language wherein classes and procedures revolve around the same concept and 
classes are defined as attributes of objects. It has strong abstraction mechanisms. BETA also
supports nested classes.<br/>

<b>Cecil</b><br/>
This object-oriented language was created by Craig Chambers at the University of Washington. It is similar to Objective-C 
and Modula-3.<br/>

<b>Lava</b><br/>
Lava is a visual object-oriented interpreter-based programming language.<br/>

<b>Lisaac</b><br/>
It was the first compiled object-oriented programming language that was based on prototype concepts. It also supports 
system programming.<br/>

<b>MOO</b><br/>
It is a dynamically typed prototype-based programming language that supports object-oriented programming. 
It supports exception handling mechanisms and looping constructs.<br/>

<b>Moto</b><br/>
It is an open source server-side programming language that comes with state and session management objects and database 
connectivity.<br/>

<b>Object-Z</b><br/>
It was developed at the University of Queensland, Australia. It extends the Z programming language by adding object-oriented
features to it.<br/>

<b>Obliq</b><br/>
It is an interpreted computer programming language that offers object-oriented programming features. It supports untyped 
variables and was designed for distributed and multithreaded computations.<br/>

<b>Oxygene</b><br/>
Based on Object Pascal, Oxygene is an object-oriented programming language with a rich feature set. Previously, 
it was known as ‘Chrome’.<br/>

<b>Pliant</b><br/>
It is based on a dynamic compiler and comes with a unique ability of supporting low-level instruction lists as well as 
high-level expressions.<br/>

<b>Prograph</b><br/>
It is a visual object-oriented multi-paradigm language that uses symbols to signify the actions to be performed
on data.<br/>

<b>REBOL</b><br/>
REBOL is the acronym given to Relative Expression Based Object Language. It is designed for use on distributed platforms 
and in network communications.<br/>

<b>Scala</b><br/>
The name Scala stands for Scalable Language. It is a multi-paradigm programming language, which offers object-oriented and 
functional programming features.<br/>

<b>Self</b><br/>
It is an object-oriented prototype-based computer programming language. NewtonScript is used to write programs for 
Apple Newton and is largely influenced by Self.<br/>

<b>Slate</b><br/>
This object-oriented programming language is based on the concept of prototypes. It derives some of its features from 
Smalltalk and some from the Self language. The Slate design is intended at providing the programmers with an operating 
system-like environment.<br/>

<b>XOTcl</b><br/>
It is an object-oriented extension of the Tool Command Language that supports metaclasses and dynamic
classes and methods.<br/>

<b>IO</b><br/>
It is a pure object-oriented programming language having a prototype-based object model.
It is small in size and can be executed on small portable virtual machines.<br/>
